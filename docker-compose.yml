services:
  postgres:
    image: postgres:15.3-alpine3.18
    restart: always
    container_name: postgres
    ports:
      - 5432:5432
    networks:
      - chat
    environment:
      POSTGRES_USER: token
      POSTGRES_PASSWORD: dd666666
      TZ: Asia/Shanghai
      POSTGRES_DB: Chat
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine3.16
    restart: always
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - chat
    command: redis-server --appendonly yes
    volumes:
      - ./redisdata:/data

  nginx:
    image: nginx:stable-alpine
    restart: always
    container_name: nginx
    networks:
      - chat
    ports:
      - 1080:80
    volumes:
      - ./main.conf:/etc/nginx/conf.d/default.conf

  rabbitmq:
    restart: always # 开机自启
    image: rabbitmq:3.11-management # RabbitMQ使用的镜像
    container_name: rabbitmq # docker名称
    hostname: rabbit
    ports:
      - 5672:5672 # 只是RabbitMQ SDK使用的端口
      - 15672:15672 # 这是RabbitMQ管理界面使用的端口
    environment:
      TZ: Asia/Shanghai # 设置RabbitMQ时区
      RABBITMQ_DEFAULT_USER: token # rabbitMQ账号
      RABBITMQ_DEFAULT_PASS: dd666666 # rabbitMQ密码
    volumes:
      - ./data:/var/lib/rabbitmq

  chat-web:
    build:
      context: ./web
      dockerfile: ./Dockerfile
    container_name: chat-web
    image: registry.cn-shenzhen.aliyuncs.com/gotrays/chat-web
    restart: always
    depends_on:
     - redis
     - postgres
    networks:
      - chat

  chat-api:
    build:
      context: ./
      dockerfile: ./src/Chat.Service/Dockerfile
    container_name: chat-api
    image: registry.cn-shenzhen.aliyuncs.com/gotrays/chat-api
    environment:
      SQLTYPE: pgsql
    restart: always
    depends_on:
     - redis
     - postgres
    networks:
      - chat


  chat-semantic-server:
    build:
      context: ./
      dockerfile: ./src/assistant/Chat.SemanticServer/Dockerfile
    container_name: chat-semantic-server
    image: registry.cn-shenzhen.aliyuncs.com/gotrays/chat-api
    restart: always
    depends_on:
     - redis
     - postgres
    networks:
      - chat

networks:
  chat:
    driver: bridge